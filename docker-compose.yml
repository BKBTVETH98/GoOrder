services:
  kafka:
    image: bitnami/kafka:4.0
    container_name: kafka
    ports:
      - "9092:9092"   # внешний для твоего ПК
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=demo-cluster
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # 2 listener’а
      - KAFKA_CFG_LISTENERS=INTERNAL://:9094,EXTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9094,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094   # ВАЖНО!
    depends_on:
      - kafka

  postgres: # наша база PostgreSQL
    image: postgres:16-alpine
    container_name: demo-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}        # берём логин из .env
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"                            # подключение с хоста psql/Adminer/приложения
    volumes:
      - pgdata:/var/lib/postgresql/data        # постоянное хранение данных БД
      - ./db/init:/docker-entrypoint-initdb.d  # всё .sql отсюда выполнится при первом старте
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 10

  adminer: # простая веб-админка к PostgreSQL
    image: adminer
    container_name: demo-adminer
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8082:8080"                   # зайдёшь на http://localhost:8082
    restart: always

volumes:
  kafka-data:
  kafka-ui:
  pgdata: